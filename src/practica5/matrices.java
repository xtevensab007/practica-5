/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica5;

/**
 *
 * @author STEVEN
 */
import java.util.Random;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import utils.JTableUtil;
import utils.OperacionMatrix;
public class matrices extends javax.swing.JFrame {

   
    public matrices() {
        initComponents();
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        jButton4.setEnabled(false);
        jButton5.setEnabled(false);
        jButton6.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        fa = new javax.swing.JTextField();
        ca = new javax.swing.JTextField();
        fb = new javax.swing.JTextField();
        cb = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblmatriza = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblmatrizb = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("MATRIZ A");

        jLabel2.setText("MATRIZ B");

        jLabel3.setText("filas");

        jLabel4.setText("columnas");

        jLabel5.setText("filas");

        jLabel6.setText("columnas");

        fa.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        fa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                faKeyTyped(evt);
            }
        });

        ca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                caKeyTyped(evt);
            }
        });

        fb.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fbKeyTyped(evt);
            }
        });

        cb.setToolTipText("");
        cb.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cbKeyTyped(evt);
            }
        });

        jLabel7.setText("OPERACIONES MATRICIALES");

        jButton1.setText("sumar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("restar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("multiplicar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("transpuesta");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("A.B");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("A elevada a la 3");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("manualmente");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("automaticamente ");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        tblmatriza.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tblmatriza);

        tblmatrizb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(tblmatrizb);

        jLabel9.setText("matriz a");

        jLabel10.setText("matriz b");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel8.setText("GENERAR");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2))
                    .addComponent(jButton7)
                    .addComponent(jButton8)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(fa, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ca, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(cb, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(fb, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton2)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton3)
                                        .addGap(18, 18, 18)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton5)
                                .addGap(23, 23, 23)
                                .addComponent(jButton6)
                                .addGap(174, 174, 174))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(119, 119, 119))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(fa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(6, 6, 6)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(36, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton7)
                        .addGap(18, 18, 18)
                        .addComponent(jButton8)
                        .addGap(54, 54, 54))))
        );

        fa.getAccessibleContext().setAccessibleName("fa");
        ca.getAccessibleContext().setAccessibleName("fb");
        fb.getAccessibleContext().setAccessibleName("fb");
        cb.getAccessibleContext().setAccessibleName("cb");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * generamos una matriz con valores aleatorios 
     * @param evt 
     */
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        jButton1.setEnabled(true);
        jButton2.setEnabled(true);
        jButton3.setEnabled(true);
        jButton4.setEnabled(true);
        jButton5.setEnabled(true);
        jButton6.setEnabled(true);
        
        
        int fila= Integer. parseInt(fa.getText());
        int colua=Integer. parseInt(ca.getText());
        int filb= Integer. parseInt(fb.getText());
        int colub=Integer. parseInt(cb.getText());
        
        int [][] matriza =new int[fila][colua];
        int [][] matrizb =new int[filb][colub];
        
        String dato1=JOptionPane.showInputDialog("ingrese primer numero de rango aleatorio");
        while(!isNumber(dato1)){
           dato1 = JOptionPane.showInputDialog(null,"numero invalido, por favor ingrese otro");
					
       
       }
       
       String dato2=JOptionPane.showInputDialog("ingrese segundo numero de rango aleatorio");
       while(!isNumber(dato2)){
           dato2 = JOptionPane.showInputDialog(null,"numero invalido, por favor ingrese otro");
					
       
       }
       int dato4=new Integer(dato2);
       int dato3=new Integer(dato1);
       
       
       
       
       for (int i = 0; i < fila; i++) {
           for (int j = 0; j < colua; j++) {

               matriza[i][j]=(int)Math.floor(Math.random()*(dato3-dato4+1)+dato4);
           }
            
        }
        DefaultTableModel model = (DefaultTableModel) tblmatriza.getModel();
        model.setRowCount(fila);
        model.setColumnCount(colua);
        for (int i = 0; i < fila; i++) {
            for (int j = 0; j < colua; j++) {
                tblmatriza.setValueAt(matriza[i][j], i, j);
                
            }
            
        }
        
       
       for (int i = 0; i < filb; i++) {
           for (int j = 0; j < colub; j++) {
               
               matrizb[i][j]=(int)Math.floor(Math.random()*(dato3-dato4+1)+dato4);
               
           }
            
        }
        DefaultTableModel model1 = (DefaultTableModel) tblmatrizb.getModel();
        model1.setRowCount(filb);
        model1.setColumnCount(colub);
        for (int i = 0; i < filb; i++) {
            for (int j = 0; j < colub; j++) {
                tblmatrizb.setValueAt(matrizb[i][j], i, j);
                
            }
            
        }
        
       
        
    }//GEN-LAST:event_jButton8ActionPerformed
/**
 * @llamamos al metodo para multiplicacion de matrices
 * @param evt 
 */
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        Integer[][] matrixA = JTableUtil.getTableData(tblmatriza);
        Integer[][] matrixB = JTableUtil.getTableData(tblmatrizb);
        
        Integer[][] matrixpunto = OperacionMatrix.punto(matrixA, matrixB);
        
        JTableUtil.setDataToTable(matrixpunto, jTable1);
    }//GEN-LAST:event_jButton5ActionPerformed
/**
 * @creamos una matriz con valores manuales
 * @param evt 
 */
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        jButton1.setEnabled(true);
        jButton2.setEnabled(true);
        jButton3.setEnabled(true);
        jButton4.setEnabled(true);
        jButton5.setEnabled(true);
        jButton6.setEnabled(true);
        
        int fila= Integer. parseInt(fa.getText());
        int colua=Integer. parseInt(ca.getText());
        int filb= Integer. parseInt(fb.getText());
        int colub=Integer. parseInt(cb.getText());
        
        int [][] matriza =new int[fila][colua];
        int [][] matrizb =new int[filb][colub];
        
        for (int i = 0; i < fila; i++) {
            for (int j = 0; j < colua; j++) {
                matriza [i][j]=Integer.parseInt(JOptionPane.showInputDialog("A[" + i + "][" + j + "]= "));
               
                
            }
            
        }
        DefaultTableModel model = (DefaultTableModel) tblmatriza.getModel();
        model.setRowCount(fila);
        model.setColumnCount(colua);
        for (int i = 0; i < fila; i++) {
            for (int j = 0; j < colua; j++) {
                tblmatriza.setValueAt(matriza[i][j], i, j);
                
            }
            
        }
        
        for (int i = 0; i < filb; i++) {
            for (int j = 0; j < colub; j++) {
                
                matrizb [i][j]=Integer.parseInt(JOptionPane.showInputDialog("B[" + i + "][" + j + "]= "));
               
            }
            
        }
        DefaultTableModel model1 = (DefaultTableModel) tblmatrizb.getModel();
        model1.setRowCount(filb);
        model1.setColumnCount(colub);
        for (int i = 0; i < filb; i++) {
            for (int j = 0; j < colub; j++) {
                tblmatrizb.setValueAt(matrizb[i][j], i, j);
                
            }
            
        }
      
    }//GEN-LAST:event_jButton7ActionPerformed
/**
 * @invocamos metodo para realizar la suma de las matrices
 * @param evt 
 */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Integer[][] matrixA = JTableUtil.getTableData(tblmatriza);
        Integer[][] matrixB = JTableUtil.getTableData(tblmatrizb);
        
        Integer[][] matrixSuma = OperacionMatrix.suma(matrixA, matrixB);
        
        JTableUtil.setDataToTable(matrixSuma, jTable1);
        
    }//GEN-LAST:event_jButton1ActionPerformed
/**
 * @invocamos metodo para realizar la resta de las matrices
 * @param evt 
 */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Integer[][] matrixA = JTableUtil.getTableData(tblmatriza);
        Integer[][] matrixB = JTableUtil.getTableData(tblmatrizb);
        
        Integer[][] matrixresta = OperacionMatrix.resta(matrixA, matrixB);
        
        JTableUtil.setDataToTable(matrixresta, jTable1);
    }//GEN-LAST:event_jButton2ActionPerformed
/**
 * @invocamos metodo para realizar la mmultiplicacion de las matrices
 * @param evt 
 */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Integer[][] matrixA = JTableUtil.getTableData(tblmatriza);
        Integer[][] matrixB = JTableUtil.getTableData(tblmatrizb);
        
        Integer[][] matrixmulti = OperacionMatrix.multi(matrixA, matrixB);
        
        JTableUtil.setDataToTable(matrixmulti, jTable1);
    }//GEN-LAST:event_jButton3ActionPerformed
/**
 * @invocamos metodo para trasponer la matriz A
 * @param evt 
 */
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Integer[][] matrixA = JTableUtil.getTableData(tblmatriza);
        Integer[][] matrixtras = OperacionMatrix.transpuesta(matrixA);
        
        
        JTableUtil.setDataToTable(matrixtras, jTable1);
    }//GEN-LAST:event_jButton4ActionPerformed
/**
 * @invocamos metodo para elevar los elementos de A al cubo
 * @param evt 
 */
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        Integer[][] matrixA = JTableUtil.getTableData(tblmatriza);
        Integer[][] matrixala3 = OperacionMatrix.elevada(matrixA);
        
        
        JTableUtil.setDataToTable(matrixala3, jTable1);
    }//GEN-LAST:event_jButton6ActionPerformed
/**
 * @evitamos letras o caracteres especiales en los cmpos de texto
 * @param evt 
 */
    private void faKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_faKeyTyped
        char car = evt.getKeyChar();
            if( Character.isDigit(car)){

                }else{
                evt.consume();
                getToolkit().beep();
}
    }//GEN-LAST:event_faKeyTyped

    private void caKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_caKeyTyped
        char car = evt.getKeyChar();
            if( Character.isDigit(car)){

                }else{
                evt.consume();
                getToolkit().beep();
}
    }//GEN-LAST:event_caKeyTyped

    private void fbKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fbKeyTyped
        char car = evt.getKeyChar();
            if( Character.isDigit(car)){

                }else{
                evt.consume();
                getToolkit().beep();
}
    }//GEN-LAST:event_fbKeyTyped

    private void cbKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbKeyTyped
        char car = evt.getKeyChar();
            if( Character.isDigit(car)){

                }else{
                evt.consume();
                getToolkit().beep();
}
    }//GEN-LAST:event_cbKeyTyped

   
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(matrices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(matrices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(matrices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(matrices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new matrices().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ca;
    private javax.swing.JTextField cb;
    private javax.swing.JTextField fa;
    private javax.swing.JTextField fb;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tblmatriza;
    private javax.swing.JTable tblmatrizb;
    // End of variables declaration//GEN-END:variables

   private static boolean isNumber(String n) {
		try {
			Integer.parseInt(n);
			return true;
		} catch (NumberFormatException nfe) {
			return false;
		}
	}
}
